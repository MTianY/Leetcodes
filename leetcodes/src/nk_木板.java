import java.util.Arrays;
import java.util.Scanner;

/**
 * 木板
 *
 * 时间限制：1s 空间限制：256MB 限定语言：不限
 *
 * 题目描述：
 *
 * 小明有n块木板，第i（1＜=i＜=n）块木板的长度为ai。
 *
 * 小明买了一块长度为m的木料，这块木料可以切割成任意块，拼接到已有的木板上，用来加长木板。
 *
 * 小明想让最短的木板尽量长。
 *
 * 请问小明加长木板后，最短木板的长度最大可以为多少？
 *
 * 输入描述：
 *
 * 输入的第一行包含两个正整数，n(11n1103)，m(11m1106)——n表示木板数，m表示木料长度。
 *
 * 输入的第二行包含n个正整数，a1，a2，，，，，an (1＜=ai＜=106)。
 *
 * 输出描述：
 *
 * 输出的唯一一行包含一个正整数，表示加长木板后，最短木板的长度最大可以为多少？
 *
 * 示例1
 *
 * 输入：
 *
 * 5 3
 *
 * 4 5 3 5 5
 *
 * 输出：
 *
 * 5
 *
 * 说明：
 *
 * 给第1块木板长度增加1，给第3块木板长度增加2后，这5块木板长度变为[5,5,5,5,5]，最短的木板的长度最大为5。
 *
 * 示例2
 *
 * 输入：
 *
 * 5 2
 *
 * 4 5 3 5 5
 *
 * 输出：
 *
 * 4
 *
 * 说明：
 *
 * 给第3块木板长度增加1后，这5块木板长度变为[4,5,4,5,5]，剩余木料的长度为1。
 *
 * 此时剩余木料无论给哪块木板加长，最短木料的长度都为4。
 *
 * 思路
 *
 * 把m木料看成m份长度1的木料，每次加给最短的（排序找出）
 */
public class nk_木板 {

    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        // 木板个数
        int n = in.nextInt();
        // 木料长度
        int m = in.nextInt();
        // 各个木板当前长度
        int[] ai = new int[n];
        for (int i = 0; i < n; i++) {
            ai[i] = in.nextInt();
        }

        // 先从小到大排序
        Arrays.sort(ai);

        while (m > 0) {
            ai[0]++;
            Arrays.sort(ai);
            m--;
        }

        System.out.println(ai[0]);


    }

}
